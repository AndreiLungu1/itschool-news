{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\itschool-news\\\\src\\\\pages\\\\NewsDetails.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { useParams } from \"react-router-dom\";\nimport { getNewsDetailsEndpoint } from \"../api/endpoints\";\nimport { useFetch } from \"../utils/hooks/useFetch\";\nimport { getNewsDetails } from \"../api/adaptors\";\nimport { getFormattedDate } from \"../utils/date\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewsDetails() {\n  _s();\n  // extrag newsId\n  let {\n    newsId\n  } = useParams();\n  //Avand in vedere ca am codificat id-ul in NewsCard.jsx, acum trebuie sa il decodific ca sa il pot trimite API\n  newsId = decodeURIComponent(newsId);\n  //Generez endpoint-ul pentru detaliile stirii\n  const newsDetailsEndpoint = getNewsDetailsEndpoint(newsId);\n  //Cerem datele stirii de la server \n  const newsDetails = useFetch(newsDetailsEndpoint);\n  //Adaptez datele de la server in functie de datele necesare componentei\n  const adaptedNewsDetails = getNewsDetails(newsDetails);\n  // Extrag cheile din adaptedNewsDetails folosind object destructuring\n  const {\n    title,\n    description,\n    image,\n    date,\n    author,\n    content,\n    thumbnail\n  } = adaptedNewsDetails;\n  // Formatez data primita de la API catre formatul: zi/luna/an\n  const formattedDate = getFormattedDate(date);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"newsDetails my-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          lg: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"pt-3 mb-5\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"fw-bold\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: image\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n_s(NewsDetails, \"+VvHKXmSd5y6x5DrA4N+LTGP8W0=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = NewsDetails;\nvar _c;\n$RefreshReg$(_c, \"NewsDetails\");","map":{"version":3,"names":["React","Layout","useParams","getNewsDetailsEndpoint","useFetch","getNewsDetails","getFormattedDate","Col","Container","Row","jsxDEV","_jsxDEV","NewsDetails","_s","newsId","decodeURIComponent","newsDetailsEndpoint","newsDetails","adaptedNewsDetails","title","description","image","date","author","content","thumbnail","formattedDate","children","className","xs","lg","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/Desktop/itschool-news/src/pages/NewsDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { useParams } from \"react-router-dom\";\nimport { getNewsDetailsEndpoint } from \"../api/endpoints\";\nimport { useFetch } from \"../utils/hooks/useFetch\";\nimport { getNewsDetails } from \"../api/adaptors\";\nimport { getFormattedDate } from \"../utils/date\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nexport default function NewsDetails() {\n\t// extrag newsId\n\tlet { newsId } = useParams();\n\t//Avand in vedere ca am codificat id-ul in NewsCard.jsx, acum trebuie sa il decodific ca sa il pot trimite API\n\tnewsId = decodeURIComponent(newsId);\n\t//Generez endpoint-ul pentru detaliile stirii\n\tconst newsDetailsEndpoint = getNewsDetailsEndpoint(newsId);\n\t//Cerem datele stirii de la server \n\tconst newsDetails = useFetch(newsDetailsEndpoint);\n\t//Adaptez datele de la server in functie de datele necesare componentei\n\tconst adaptedNewsDetails = getNewsDetails(newsDetails);\n\t// Extrag cheile din adaptedNewsDetails folosind object destructuring\n\tconst {title, description, image, date, author, content, thumbnail} = adaptedNewsDetails;\n\t// Formatez data primita de la API catre formatul: zi/luna/an\n\tconst formattedDate = getFormattedDate(date);\n\treturn (\n\t\t<Layout>\n\t\t\t<Container className=\"newsDetails my-5\">\n\t\t\t\t<Row className=\"d-flex justify-content-center\">\n\t\t\t\t\t<Col xs={12} lg={8}>\n\t\t\t\t\t\t<h1 className=\"pt-3 mb-5\">{title}</h1>\n\t\t\t\t\t\t<p className=\"fw-bold\">{description}</p>\n\t\t\t\t\t\t{/* De la API noi primim imaginea sub forma de tag-uri de HTML iar pentru a le afisa pe ecran in React avem nevoie de prop-ul dangerouslySetInnerHTML care este echivalentul innerHTML din JavaScript */}\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{__html: image}}></div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</Layout>\n\t);\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,sBAAsB,QAAQ,kBAAkB;AACzD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,gBAAgB,QAAQ,eAAe;AAChD,SAASC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrC;EACA,IAAI;IAAEC;EAAO,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC5B;EACAY,MAAM,GAAGC,kBAAkB,CAACD,MAAM,CAAC;EACnC;EACA,MAAME,mBAAmB,GAAGb,sBAAsB,CAACW,MAAM,CAAC;EAC1D;EACA,MAAMG,WAAW,GAAGb,QAAQ,CAACY,mBAAmB,CAAC;EACjD;EACA,MAAME,kBAAkB,GAAGb,cAAc,CAACY,WAAW,CAAC;EACtD;EACA,MAAM;IAACE,KAAK;IAAEC,WAAW;IAAEC,KAAK;IAAEC,IAAI;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGP,kBAAkB;EACxF;EACA,MAAMQ,aAAa,GAAGpB,gBAAgB,CAACgB,IAAI,CAAC;EAC5C,oBACCX,OAAA,CAACV,MAAM;IAAA0B,QAAA,eACNhB,OAAA,CAACH,SAAS;MAACoB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eACtChB,OAAA,CAACF,GAAG;QAACmB,SAAS,EAAC,+BAA+B;QAAAD,QAAA,eAC7ChB,OAAA,CAACJ,GAAG;UAACsB,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAH,QAAA,gBAClBhB,OAAA;YAAIiB,SAAS,EAAC,WAAW;YAAAD,QAAA,EAAER;UAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtCvB,OAAA;YAAGiB,SAAS,EAAC,SAAS;YAAAD,QAAA,EAAEP;UAAW;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAExCvB,OAAA;YAAKwB,uBAAuB,EAAE;cAACC,MAAM,EAAEf;YAAK;UAAE;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACrB,EAAA,CA7BuBD,WAAW;EAAA,QAEjBV,SAAS,EAMNE,QAAQ;AAAA;AAAAiC,EAAA,GARLzB,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}